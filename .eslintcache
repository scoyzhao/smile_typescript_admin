[{"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/index.tsx":"1","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/reportWebVitals.js":"2","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/serviceWorker.ts":"3","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/App.tsx":"4","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/router/index.tsx":"5","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/index.tsx":"6","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-list/index.tsx":"7","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-add/index.tsx":"8","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-classify/index.tsx":"9","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/message-add/index.tsx":"10","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-comments/index.tsx":"11","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/messages-list/index.tsx":"12","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/login/index.tsx":"13","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/project-add/index.tsx":"14","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/music-list/index.tsx":"15","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-draft/index.tsx":"16","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/projects/index.tsx":"17","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/home/index.tsx":"18","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/tag-add/index.tsx":"19","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/tags/index.tsx":"20","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/api.ts":"21","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/index.ts":"22","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/main.tsx":"23","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/side.tsx":"24","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-list/article-config.tsx":"25","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-add/base-info.tsx":"26","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-add/edit.tsx":"27","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-comments/article-config.tsx":"28","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-comments/oprations.tsx":"29","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/messages-list/article-config.tsx":"30","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/messages-list/oprations.tsx":"31","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/project-add/add.tsx":"32","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/music-list/music-config.tsx":"33","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/music-list/oprations.tsx":"34","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/tags/oprations.tsx":"35","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/tags/article-config.tsx":"36","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/tag-add/add.tsx":"37","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/projects/oprations.tsx":"38","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/projects/article-config.tsx":"39","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-draft/article-config.tsx":"40","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/components/page-layout.tsx":"41","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/http.ts":"42","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/public.ts":"43","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/project-add/config.ts":"44","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/components/header-title/index.tsx":"45","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/menu.tsx":"46","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/components/bicon.tsx":"47","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/menu-config.ts":"48","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/config.ts":"49","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/commite-manage/index.tsx":"50","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/commite-manage/Edit.tsx":"51","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/user-manage/index.tsx":"52","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/user-manage/EditPassword.tsx":"53","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/user-manage/Edit.tsx":"54","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/worker-manage/index.tsx":"55","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/worker-manage/Edit.tsx":"56","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/goods/index.tsx":"57","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/goods/Edit.tsx":"58","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/lifeOrder/index.tsx":"59","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/mealOrder/index.tsx":"60"},{"size":556,"mtime":1619093157885,"results":"61","hashOfConfig":"62"},{"size":362,"mtime":1619093157899,"results":"63","hashOfConfig":"62"},{"size":5201,"mtime":1619093157899,"results":"64","hashOfConfig":"62"},{"size":354,"mtime":1619093157880,"results":"65","hashOfConfig":"62"},{"size":1592,"mtime":1619772020265,"results":"66","hashOfConfig":"62"},{"size":315,"mtime":1619093157883,"results":"67","hashOfConfig":"62"},{"size":2751,"mtime":1619251616956,"results":"68","hashOfConfig":"62"},{"size":4258,"mtime":1619093157887,"results":"69","hashOfConfig":"62"},{"size":273,"mtime":1619093157887,"results":"70","hashOfConfig":"62"},{"size":221,"mtime":1619093157892,"results":"71","hashOfConfig":"62"},{"size":2575,"mtime":1619093157888,"results":"72","hashOfConfig":"62"},{"size":2717,"mtime":1619093157892,"results":"73","hashOfConfig":"62"},{"size":1698,"mtime":1619251370477,"results":"74","hashOfConfig":"62"},{"size":849,"mtime":1619093157896,"results":"75","hashOfConfig":"62"},{"size":1766,"mtime":1619093157894,"results":"76","hashOfConfig":"62"},{"size":2416,"mtime":1619093157889,"results":"77","hashOfConfig":"62"},{"size":1751,"mtime":1619093157896,"results":"78","hashOfConfig":"62"},{"size":1908,"mtime":1619268124994,"results":"79","hashOfConfig":"62"},{"size":268,"mtime":1619093157897,"results":"80","hashOfConfig":"62"},{"size":2559,"mtime":1619093157898,"results":"81","hashOfConfig":"62"},{"size":4713,"mtime":1619771078891,"results":"82","hashOfConfig":"62"},{"size":73,"mtime":1619249272711,"results":"83","hashOfConfig":"62"},{"size":641,"mtime":1619093157883,"results":"84","hashOfConfig":"62"},{"size":459,"mtime":1619093157884,"results":"85","hashOfConfig":"62"},{"size":1364,"mtime":1619093157890,"results":"86","hashOfConfig":"62"},{"size":4180,"mtime":1619093157886,"results":"87","hashOfConfig":"62"},{"size":1033,"mtime":1619093157886,"results":"88","hashOfConfig":"62"},{"size":1070,"mtime":1619093157888,"results":"89","hashOfConfig":"62"},{"size":730,"mtime":1619093157888,"results":"90","hashOfConfig":"62"},{"size":1070,"mtime":1619093157892,"results":"91","hashOfConfig":"62"},{"size":729,"mtime":1619093157893,"results":"92","hashOfConfig":"62"},{"size":3131,"mtime":1619093157895,"results":"93","hashOfConfig":"62"},{"size":945,"mtime":1619093157894,"results":"94","hashOfConfig":"62"},{"size":382,"mtime":1619093157895,"results":"95","hashOfConfig":"62"},{"size":730,"mtime":1619093157898,"results":"96","hashOfConfig":"62"},{"size":613,"mtime":1619093157898,"results":"97","hashOfConfig":"62"},{"size":1061,"mtime":1619093157897,"results":"98","hashOfConfig":"62"},{"size":382,"mtime":1619093157897,"results":"99","hashOfConfig":"62"},{"size":832,"mtime":1619093157896,"results":"100","hashOfConfig":"62"},{"size":1452,"mtime":1619093157889,"results":"101","hashOfConfig":"62"},{"size":363,"mtime":1619093157881,"results":"102","hashOfConfig":"62"},{"size":963,"mtime":1619249123420,"results":"103","hashOfConfig":"62"},{"size":289,"mtime":1619267441574,"results":"104","hashOfConfig":"62"},{"size":862,"mtime":1619093157895,"results":"105","hashOfConfig":"62"},{"size":692,"mtime":1619595805204,"results":"106","hashOfConfig":"62"},{"size":1771,"mtime":1619257093386,"results":"107","hashOfConfig":"62"},{"size":210,"mtime":1619093157880,"results":"108","hashOfConfig":"62"},{"size":1070,"mtime":1619771977146,"results":"109","hashOfConfig":"62"},{"size":60,"mtime":1619249067212,"results":"110","hashOfConfig":"62"},{"size":2981,"mtime":1619269248885,"results":"111","hashOfConfig":"62"},{"size":2026,"mtime":1619269639248,"results":"112","hashOfConfig":"62"},{"size":3191,"mtime":1619595805205,"results":"113","hashOfConfig":"62"},{"size":1796,"mtime":1619595805205,"results":"114","hashOfConfig":"62"},{"size":2881,"mtime":1619595805204,"results":"115","hashOfConfig":"62"},{"size":3272,"mtime":1619615024815,"results":"116","hashOfConfig":"62"},{"size":2702,"mtime":1619685759536,"results":"117","hashOfConfig":"62"},{"size":3090,"mtime":1619770327782,"results":"118","hashOfConfig":"62"},{"size":2139,"mtime":1619770828382,"results":"119","hashOfConfig":"62"},{"size":2051,"mtime":1619772309798,"results":"120","hashOfConfig":"62"},{"size":1989,"mtime":1619772241777,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"ppblw3",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"124"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"124"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"124"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"124"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"124"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"124"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"124"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/index.tsx",[],["255","256"],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/reportWebVitals.js",[],["257","258"],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/serviceWorker.ts",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/App.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/router/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-list/index.tsx",["259","260"],"import React, { useState, useEffect } from 'react'\nimport { Table, Divider, message } from 'antd'\nimport { RouteComponentProps } from 'react-router'\nimport { TablePaginationConfig } from 'antd/es/table'\nimport { columns } from './article-config'\nimport PageLayout from '../../common/components/page-layout'\nimport { getArts, delArt } from '../../utils/api'\n\nimport './index.scss'\n\ntype EditableTableProps = Parameters<typeof Table>[0];\ntype ColumnTypes = Exclude<EditableTableProps['columns'], undefined>;\n\nconst ArticleList = (props:RouteComponentProps) => {\n  const [list, setList] = useState([])\n  const [page, setPage] = useState({ current: 1, total: 0 })\n  const [loading, setLoading] = useState(false)\n  const [load, setLoad] = useState(0)\n  useEffect(() => {\n    (async () => {\n      setLoading(true)\n      const { data } = await getArts({current_page: page.current, state: 1})\n      if (data.code) {\n        const { list, pagination } = data.result\n        setList(list || [])\n        setPage({current: pagination.current_page, total: pagination.total})\n      }\n      setLoading(false)\n    })()\n  }, [load])\n  // 编辑\n  async function edit (id: string) {\n    props.history.push(`/article-add?id=${id}`)\n  }\n  // 删除\n  async function del (id: string) {\n    const {data} = await delArt(id)\n    if (data.code) {\n      message.success(data.message)\n      setPage({ current: 1, total: 0 })\n      setLoad(load + 1)\n    }\n  }\n  const tableColumns = columns.map(col => {\n    if (col.dataIndex === 'operation') {\n      return {\n        ...col,\n        onCell: (record:any) => ({col, record, edit, del})\n      }\n    }\n    return col\n  })\n  const components = { body: { cell: TCell } }\n  function tableChange (pagination: TablePaginationConfig) {\n    setPage({ current: pagination.current || 1, total: pagination.total || 0 })\n    setLoad(load + 1)\n  }\n  return <PageLayout title='社区信息'>\n    <Table\n      onChange={tableChange}\n      components={components}\n      columns={tableColumns as ColumnTypes}\n      loading={loading}\n      dataSource={[]}\n      bordered\n      size=\"middle\"\n      rowKey=\"_id\" />\n  </PageLayout>\n}\n\nfunction TCell (props: any) {\n  const { children, col } = props\n  let res:any = col && col.dataIndex === 'operation' ? <Operate {...props} /> : children\n  return <td>{res}</td>\n}\n\nexport function Operate (props: any) {\n  const { edit, del, record} = props\n  const view = () => {\n    console.log('view')\n  }\n  return (\n    <div className=\"t_btn\">\n      <span onClick={view}>查看</span>\n      <Divider type=\"vertical\" />\n      <span onClick={() => edit(record._id)}>修改</span>\n      <Divider type=\"vertical\" />\n      <span onClick={() => del(record._id)}>删除</span>\n    </div>\n  )\n}\n\nexport default ArticleList\n","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-add/index.tsx",["261"],"import React, { useEffect, useState, useRef } from 'react'\nimport { Button, message, Modal } from 'antd'\nimport { useLocation } from 'react-router-dom'\nimport { RouteComponentProps } from 'react-router'\nimport './index.scss'\nimport './view-article.scss'\nimport BaseInfo from './base-info'\nimport Edit from './edit'\nimport HeaderTittle from '../../common/components/header-title'\nimport { addArticle, editeArt, getArtId, mdArt } from '../../utils/api'\nimport { useQuery } from '../../utils/index'\n\nexport default function AddArticle (props: RouteComponentProps) {\n  let myform: any = null\n  const [acontent, setAcontent] = useState({content: '', editContent: ''}) // 编辑文章\n  const [article, setArticle] = useState({}) // 文章基本信息\n  const [editContent, setEditContent] = useState('') // 编辑文章\n  const [title, setTitle] = useState('')\n  const [visible, setVisible] = useState(false);// 文章预览\n  const query = useQuery()\n  let location = useLocation()\n  const viewArticleDom = useRef<any>(null);\n  function submit () {\n    myform.submit()\n  }\n  async function openViewArticle() {\n    setVisible(true)\n    const res = await mdArt({\n      article: acontent.content\n    });\n    viewArticleDom.current.innerHTML = res.data.result.html\n  }\n\n  function getFormData(article:any, tagIds: Array<string>) {\n    if (acontent.content) {\n      let id = query.get('id')\n      if (id) {\n        edit(article, id, tagIds)\n      } else {\n        add(article, tagIds)\n      }\n    }\n  }\n\n  async function add (values: any, tagIds: Array<string>) {\n    const params = {...values, ...acontent }\n    const { data } = await addArticle({\n      title: params.title,\n      keyword: params.keyword,\n      descript: params.descript,\n      tag: tagIds,\n      content: params.content,\n      editContent: '',\n      state: params.state,\n      publish: params.publish,\n    })\n    if (data.code) {\n      message.success(data.message)\n      props.history.push('/article')\n    }\n  }\n  async function edit (values: any, id: string, tagIds: Array<string>) {\n    const params = {...values, ...acontent}\n\n    const { data } = await editeArt(id, {\n      title: params.title,\n      keyword: params.keyword,\n      descript: params.descript,\n      tag: tagIds,\n      content: params.content,\n      editContent: params.editContent,\n      state: params.state,\n      publish: params.publish,\n    })\n    if (data.code) {\n      message.success(data.message)\n      props.history.push('/article')\n    }\n  }\n  const editChange = (c: string, e: string) => {\n    setAcontent({content: c, editContent: e})\n  }\n  const saveFormRef = (formRef: any) => { myform = formRef }\n  // 获取编辑数据\n  useEffect(() => {\n    (async () => {\n      const id = query.get('id')\n      if (id) {\n        const { data } = await getArtId(id)\n        if (data.code) {\n          setArticle(data.result)\n          setEditContent(data.result.content)\n          setTitle('编辑文章')\n          setAcontent({content: data.result.content, editContent: data.result.editContent})\n        }\n      } else {\n        setArticle({})\n        setEditContent('')\n        setTitle('添加文章')\n        setAcontent({content: '', editContent: ''})\n      }\n    })()\n  }, [location])\n\n  return (\n    <>\n      <HeaderTittle title={title} />\n      <div className=\"p20\">\n        <BaseInfo submit={getFormData} wrappedComponentRef={saveFormRef} article={article} />\n        <Edit content={editContent} editChange={editChange} />\n        <div className='btnbox'>\n          <Button type='primary' style={{width: '100px'}} onClick={() => submit()}>提 交</Button>\n          <Button type=\"primary\" style={{width: '100px', marginLeft: '20px'}} onClick={openViewArticle}>预览</Button>\n          <Button danger style={{width: '100px', marginLeft: '20px'}} onClick={() => submit()}>存草稿</Button>\n        </div>\n        <Modal\n          title=\"文章预览\"\n          centered\n          visible={visible}\n          onOk={() => setVisible(false)}\n          onCancel={() => setVisible(false)}\n          width={1000}\n        >\n          <div className=\"view-markdown\">\n            <div ref={viewArticleDom} className=\"theme-default-content content__default\"></div>\n          </div>\n        </Modal>\n      </div>\n    </>\n  )\n}\n","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-classify/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/message-add/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-comments/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/messages-list/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/login/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/project-add/index.tsx",["262"],"import React, { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport PageLayout from '../../common/components/page-layout'\nimport Add from './add'\nimport { fetchProjectId } from '../../utils/api'\nimport { useQuery } from '../../utils/index'\nconst ProjectAdd = (props: any) => {\n  const [project, setProject] = useState({})\n  let location = useLocation()\n  const query = useQuery()\n  // 获取编辑数据\n  useEffect(() => {\n    (async () => {\n      const id = query.get('id')\n      if (id) {\n        const { data } = await fetchProjectId(id)\n        if (data.code) {\n          setProject(data.result)\n        }\n      } else {\n        setProject({})\n      }\n    })()\n  }, [location])\n  return <PageLayout title='新增项目'>\n    <Add {...props} project={project} />\n  </PageLayout>\n}\n\nexport default ProjectAdd\n","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/music-list/index.tsx",["263"],"import React, { useState, useEffect } from 'react'\nimport { Table, message } from 'antd'\nimport { columns } from './music-config'\nimport PageLayout from '../../common/components/page-layout'\nimport { fetchMusic, delMusic } from '../../utils/api'\nimport { Operate } from './oprations'\nimport './index.scss'\n\nfunction EditCell (props: any) {\n  const { children, col} = props\n  return <td>{col && col.dataIndex === 'operation' ? <Operate {...props} /> : children}</td>\n}\n\nconst Projects = (props:any) => {\n  const [tableData, setTableData] = useState([]) \n  const [refresh, setRefresh] = useState(1)\n  const [page, setPage] = useState({ current: 1, total: 0 })\n  useEffect(() => {\n    (async () => {\n      const { data } = await fetchMusic({current_page: page.current})\n      setTableData(data.result || [])\n      // setPage({current: data.result.pagination.current_page, total: data.result.pagination.total})\n    })()\n  }, [refresh])\n\n  function edit (id:string) {\n    props.history.push(`/music-add?id=${id}`)\n  }\n  async function del (id:string) {\n    const {data} = await delMusic(id)\n    setRefresh(refresh+1)\n    setPage({ current: 1, total: 0 })\n    message.success(data.message)\n  }\n\n  const tableColumns = columns.map(col => {\n    if (col.dataIndex === 'operation') {\n      return { ...col, onCell: (record:any, rowIndex: number) => ({col, record, edit, del, rowIndex }) }\n    } else {\n      return col\n    }\n  })\n  const components = { body: { cell: EditCell } }\n  return <PageLayout title='音乐管理'>\n    <Table components={components}\n      className=\"music-list\"\n      columns={tableColumns as any}\n      dataSource={tableData}\n      bordered\n      size='middle'\n      rowKey='_id'\n      pagination={page} />\n  </PageLayout>\n}\n\nexport default Projects\n","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-draft/index.tsx",["264"],"import React, { useState, useEffect } from 'react'\nimport { Table, Divider, message } from 'antd'\nimport { RouteComponentProps } from 'react-router'\nimport { columns } from './article-config'\nimport PageLayout from '../../common/components/page-layout'\nimport { getArts, delArt } from '../../utils/api'\nimport './index.scss'\nconst ArticleList = (props:RouteComponentProps) => {\n  const [list, setList] = useState([])\n  const [page, setPage] = useState({ current: 1, total: 0 })\n  const [loading, setLoading] = useState(false)\n  const [load, setLoad] = useState(0)\n  useEffect(() => {\n    (async () => {\n      setLoading(true)\n      const { data } = await getArts({current_page: page.current, state: 2})\n      if (data.code) {\n        const { list, pagination } = data.result\n        setList(list || [])\n        setPage({current: pagination.current_page, total: pagination.total})\n      }\n      setLoading(false)\n    })()\n  }, [load])\n  // 编辑\n  async function edit (id: string) {\n    props.history.push(`/article-add?id=${id}`)\n  }\n  // 删除\n  async function del (id: string) {\n    const {data} = await delArt(id)\n    if (data.code) {\n      message.success(data.message)\n      setPage({ current: 1, total: 0 })\n      setLoad(load + 1)\n    }\n  }\n  const tableColumns = columns.map(col => {\n    if (col.dataIndex === 'operation') {\n      return {\n        ...col,\n        onCell: (record:any, rowIndex: number) => ({col, record, edit, del, rowIndex})\n      }\n    }\n    return col\n  })\n  const components = { body: { cell: TCell } }\n  return <PageLayout title='草稿箱'>\n    <Table\n      components={components}\n      columns={tableColumns as any}\n      loading={loading}\n      dataSource={list}\n      bordered\n      size=\"middle\"\n      pagination={page}\n      rowKey=\"_id\" />\n  </PageLayout>\n}\n\nfunction TCell (props: any) {\n  const { children, col } = props\n  let res:any = col && col.dataIndex === 'operation' ? <Operate {...props} /> : children\n  return <td>{res}</td>\n}\n\nexport function Operate (props: any) {\n  const { edit, del, record} = props\n  const view = () => {\n    console.log('view')\n  }\n  return (\n    <div className=\"t_btn\">\n      <span onClick={view}>查看</span>\n      <Divider type=\"vertical\" />\n      <span onClick={() => edit(record._id)}>修改</span>\n      <Divider type=\"vertical\" />\n      <span onClick={() => del(record._id)}>删除</span>\n    </div>\n  )\n}\n\nexport default ArticleList\n","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/projects/index.tsx",["265"],"import React, { useState, useEffect } from 'react'\nimport { Table, message } from 'antd'\nimport { columns } from './article-config'\nimport PageLayout from '../../common/components/page-layout'\nimport { fetchProject, delProject } from '../../utils/api'\nimport { Operate } from './oprations'\nimport './index.scss'\n\nfunction EditCell (props: any) {\n  const { children, col} = props\n  return <td>{col && col.dataIndex === 'operation' ? <Operate {...props} /> : children}</td>\n}\n\nconst Projects = (props:any) => {\n  const [tableData, setTableData] = useState([]) \n  const [refresh, setRefresh] = useState(1)\n  const [page, setPage] = useState({ current: 1, total: 0 })\n  useEffect(() => {\n    (async () => {\n      const { data } = await fetchProject({current_page: page.current})\n      setTableData(data.result.list || [])\n      setPage({current: data.result.pagination.current_page, total: data.result.pagination.total})\n    })()\n  }, [refresh])\n\n  function edit (id:string) {\n    props.history.push(`/project-add?id=${id}`)\n  }\n  async function del (id:string) {\n    const {data} = await delProject(id)\n    setRefresh(refresh+1)\n    setPage({ current: 1, total: 0 })\n    message.success(data.message)\n  }\n\n  const tableColumns = columns.map(col => {\n    if (col.dataIndex === 'operation') {\n      return { ...col, onCell: (record:any, rowIndex: number) => ({col, record, edit, del, rowIndex }) }\n    } else {\n      return col\n    }\n  })\n  const components = { body: { cell: EditCell } }\n  return <PageLayout title='项目管理'>\n    <Table components={components}\n      columns={tableColumns as any}\n      dataSource={tableData}\n      bordered\n      size='middle'\n      rowKey='_id'\n      pagination={page} />\n  </PageLayout>\n}\n\nexport default Projects\n","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/home/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/tag-add/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/tags/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/api.ts",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/index.ts",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/main.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/side.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-list/article-config.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-add/base-info.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-add/edit.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-comments/article-config.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-comments/oprations.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/messages-list/article-config.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/messages-list/oprations.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/project-add/add.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/music-list/music-config.tsx",["266","267","268"],"import React from 'react'\nimport { ColumnProps } from 'antd/es/table'\n\nexport const columns:ColumnProps<any>[] = [\n  {\n    title: '#',\n    width: 50,\n    key: 'tindex',\n    render: (text, record, dataIndex) => <span>{dataIndex + 1}</span>\n  },\n  {\n    title: '歌名',\n    dataIndex: 'title',\n    width: 160,\n    key: 'title',\n    render: (text, record, dataIndex) => <a href={record.url} target=\"_blank\">{text}</a>\n  },\n  {\n    title: '歌手',\n    key: 'name',\n    width: 100,\n    dataIndex: 'name'\n  },\n  {\n    title: '海报',\n    key: 'poster',\n    width: 120,\n    dataIndex: 'poster',\n    render: text => <a href={text} target=\"_brank\"><img width=\"50\" src={text} /></a>\n  },\n  {\n    title: '歌曲链接',\n    key: 'url',\n    dataIndex: 'url',\n    width: 320,\n    render: text => <a href={text} target=\"_blank\" className=\"url\">{text}</a>\n  },\n  {\n    title: '操作',\n    key: 'operation',\n    width: 150,\n    dataIndex: 'operation'\n  }\n]\n","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/music-list/oprations.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/tags/oprations.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/tags/article-config.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/tag-add/add.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/projects/oprations.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/projects/article-config.tsx",["269"],"import React from 'react'\nimport { ColumnProps } from 'antd/es/table'\n\nexport interface recordType{\n  name: string\n}\n\nexport const columns:ColumnProps<any>[] = [\n  {\n    title: '#',\n    width: 50,\n    key: 'tindex',\n    render: (text, record, dataIndex) => <span>{dataIndex + 1}</span>\n  },\n  {\n    title: '标题',\n    dataIndex: 'title',\n    width: 150,\n    key: 'title',\n    render: (text, record, dataIndex) => {\n      return <a href={record.github} target=\"_blank\">{text}</a>\n    }\n  },\n  {\n    title: 'icon图标',\n    key: 'icon',\n    dataIndex: 'icon',\n    width: 200,\n  },\n  {\n    title: '预览地址',\n    key: 'view',\n    dataIndex: 'view'\n  },\n  {\n    title: 'github地址',\n    key: 'github',\n    dataIndex: 'github'\n  },\n  {\n    title: '编辑',\n    key: 'operation',\n    dataIndex: 'operation',\n    width: 120\n  }\n]\n","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/article-draft/article-config.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/components/page-layout.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/http.ts",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/public.ts",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/project-add/config.ts",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/components/header-title/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/menu.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/components/bicon.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/menu-config.ts",["270","271","272","273","274","275"],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/config.ts",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/commite-manage/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/commite-manage/Edit.tsx",["276","277"],"/* eslint-disable no-template-curly-in-string */\nimport React, { useState, useEffect } from 'react'\nimport { Modal, Table, Form, Input, message } from 'antd'\nimport { addCommite, editCommite } from '../../utils/api'\n\ntype editProps = {\n  isShow: boolean\n  data: any\n  handleCancel: any\n  type: number\n}\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 16 },\n}\n\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not a valid email!',\n    number: '${label} is not a valid number!',\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}',\n  },\n}\n\nconst Edit: React.FC<editProps> = ({ isShow, data, handleCancel, type }) => {\n  const [loading, setLoading] = useState(false)\n  const [form] = Form.useForm()\n  const { id, name } = data\n\n  const handleSubmit = async () => {\n    try {\n      setLoading(true)\n      const values = await form.validateFields()\n      const newId = id ? id : Math.floor(Math.random() * 10000 + 5)\n      const res = id ? await editCommite({\n        editCommit: {\n          name: values.name, id: newId,\n        },\n        type,\n      }) :\n        await addCommite({ name: values.name, id: newId, type })\n\n      setLoading(false)\n      const {\n        message: msg,\n        code,\n      } = res.data\n      if (code !== 200) {\n        return message.error(msg)\n      }\n\n      message.success('操作成功')\n      return handleCancel()\n    } catch (errorInfo) {\n      console.log('Failed:', errorInfo)\n    }\n  }\n\n  return (\n    <Modal\n      title={id ? '编辑社区' : '新增社区'}\n      confirmLoading={loading}\n      visible={isShow}\n      onCancel={handleCancel}\n      onOk={handleSubmit}\n    >\n      <Form\n        {...layout}\n        form={form}\n        validateMessages={validateMessages}\n        initialValues={{\n          name,\n        }}\n      >\n        <Form.Item name=\"name\" label=\"name\" rules={[{ required: true }]}>\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default Edit\n","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/user-manage/index.tsx",["278"],"import React, { useState, useEffect } from 'react'\nimport { Card, Table, Button, Popconfirm, message } from 'antd';\nimport './index.scss'\nimport PageLayout from '../../common/components/page-layout'\nimport { getCommiteUserList } from '../../utils/api'\nimport { getUserInfo } from '../../utils';\nimport Edit from './Edit'\nimport EditPassword from './EditPassword'\n\nconst Index: React.FC = () => {\n  const [userList, setUserList] = useState([])\n  const [editUser, setEditUser] = useState({})\n  const [loading, setLoading] = useState(false)\n  const [editModalVisible, setVisible] = useState(false)\n  const [modifyPwdModalVisible, setModifyPwdVisible] = useState(false)\n\n  const { type, commiteId } = getUserInfo()\n\n  useEffect(() => {\n    async function getCommiteList() {\n      setLoading(true)\n      const res: any = await getCommiteUserList({ type, commiteId })\n      setLoading(false)\n      const {\n        code,\n        message: msg,\n        data,\n      } = res.data\n      if (code !== 200) {\n        message.error(msg)\n      }\n\n      return setUserList(data)\n    }\n\n    getCommiteList()\n  }, [type, commiteId, editModalVisible])\n\n  const showEditModal = (func: string, data?: any) => {\n    if (func === 'add') {\n      setEditUser({})\n    } else if (func === 'edit') {\n      setEditUser(data)\n    }\n\n    setVisible(true)\n  }\n\n  const columns = [\n    {\n      title: '用户名',\n      dataIndex: 'userName',\n    },\n    {\n      title: '手机',\n      dataIndex: 'phone',\n    },\n    {\n      title: '身份证号码',\n      dataIndex: 'userNumber',\n    },\n    {\n      title: '账号状态',\n      dataIndex: 'auditStatus',\n      render: (status: number) => {\n        if (status === 1) {\n          return (\n            <span style={{ color: 'green' }}>已审核</span>\n          )\n        }\n\n        return (\n          <span style={{ color: 'red' }}>待审核</span>\n        )\n      },\n    },\n    {\n      title: '账号类型',\n      dataIndex: 'type',\n      render: (status: number) => {\n        if (status === 1) {\n          return (\n            <span style={{ color: 'green' }}>社区管理员</span>\n          )\n        }\n\n        return (\n          <span>普通用户</span>\n        )\n      },\n    },\n    {\n      title: '操作',\n      render: (record: any) => (\n        <>\n          <Button\n            type='primary'\n            onClick = {() => showEditModal('edit', record)}\n          >\n            编辑\n          </Button>&nbsp;&nbsp;\n          <Button\n            type='primary'\n            onClick={() => setModifyPwdVisible(true)}\n          >\n            修改密码\n          </Button>\n        </>\n      )\n    },\n  ];\n\n  return (\n    <PageLayout title='社区管理'>\n      <Card\n        loading={loading}\n      >\n        <Table\n          rowKey='id'\n          columns={columns}\n          dataSource={userList}\n        />\n      </Card>\n      {\n        editModalVisible && <Edit isShow={editModalVisible} data={editUser} handleCancel={() => setVisible(false)} />\n      }\n      {\n        modifyPwdModalVisible && <EditPassword isShow={modifyPwdModalVisible} data={editUser} handleCancel={() => setModifyPwdVisible(false)} />\n      }\n    </PageLayout>\n  )\n}\n\nexport default Index\n","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/user-manage/EditPassword.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/user-manage/Edit.tsx",["279"],"/* eslint-disable no-template-curly-in-string */\nimport React, { useState, useEffect } from 'react'\nimport { Modal, Radio, Form, Input, message } from 'antd'\nimport { editUser } from '../../utils/api'\n\ntype editProps = {\n  isShow: boolean\n  data: any\n  handleCancel: any\n}\n\nconst layout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 18 },\n}\n\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not a valid email!',\n    number: '${label} is not a valid number!',\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}',\n  },\n}\n\nconst Edit: React.FC<editProps> = ({ isShow, data, handleCancel }) => {\n  const [loading, setLoading] = useState(false)\n  const [form] = Form.useForm()\n  const { userName, phone, userNumber, auditStatus, type, password } = data\n\n  const handleSubmit = async () => {\n    try {\n      setLoading(true)\n      const values = await form.validateFields()\n      const res = await editUser({\n        editUser: {\n          userName: values.userName,\n          phone: values.phone,\n          userNumber: values.userNumber,\n          auditStatus: values.auditStatus,\n          type: values.type,\n          password: password,\n        },\n      })\n\n      setLoading(false)\n      const {\n        message: msg,\n        code,\n      } = res.data\n      if (code !== 200) {\n        return message.error(msg)\n      }\n\n      message.success('操作成功')\n      return handleCancel()\n    } catch (errorInfo) {\n      console.log('Failed:', errorInfo)\n    }\n  }\n\n  return (\n    <Modal\n      title='编辑用户'\n      confirmLoading={loading}\n      visible={isShow}\n      onCancel={handleCancel}\n      onOk={handleSubmit}\n    >\n      <Form\n        {...layout}\n        form={form}\n        validateMessages={validateMessages}\n        initialValues={{\n          userName,\n          phone,\n          userNumber,\n          auditStatus,\n          type,\n        }}\n      >\n        <Form.Item name=\"userName\" label=\"用户名\" rules={[{ required: true }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"phone\" label=\"手机号码\" rules={[{ required: true }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"userNumber\" label=\"身份证\" rules={[{ required: true }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"auditStatus\" label=\"审核状态\" rules={[{ required: true }]}>\n          <Radio.Group>\n            <Radio value={0}>待审核</Radio>\n            <Radio value={1}>审核通过</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item name=\"type\" label=\"用户类型\" rules={[{ required: true }]}>\n          <Radio.Group>\n            <Radio value={0}>普通用户</Radio>\n            <Radio value={1}>社区管理人员</Radio>\n          </Radio.Group>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default Edit\n","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/worker-manage/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/worker-manage/Edit.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/goods/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/goods/Edit.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/lifeOrder/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/mealOrder/index.tsx",[],{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","replacedBy":"283"},{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","severity":1,"message":"285","line":15,"column":10,"nodeType":"286","messageId":"287","endLine":15,"endColumn":14},{"ruleId":"288","severity":1,"message":"289","line":30,"column":6,"nodeType":"290","endLine":30,"endColumn":12,"suggestions":"291"},{"ruleId":"288","severity":1,"message":"292","line":103,"column":6,"nodeType":"290","endLine":103,"endColumn":16,"suggestions":"293"},{"ruleId":"288","severity":1,"message":"292","line":24,"column":6,"nodeType":"290","endLine":24,"endColumn":16,"suggestions":"294"},{"ruleId":"288","severity":1,"message":"289","line":24,"column":6,"nodeType":"290","endLine":24,"endColumn":15,"suggestions":"295"},{"ruleId":"288","severity":1,"message":"289","line":24,"column":6,"nodeType":"290","endLine":24,"endColumn":12,"suggestions":"296"},{"ruleId":"288","severity":1,"message":"289","line":24,"column":6,"nodeType":"290","endLine":24,"endColumn":15,"suggestions":"297"},{"ruleId":"298","severity":1,"message":"299","line":16,"column":42,"nodeType":"300","endLine":16,"endColumn":79},{"ruleId":"301","severity":1,"message":"302","line":29,"column":52,"nodeType":"300","endLine":29,"endColumn":81},{"ruleId":"298","severity":1,"message":"299","line":36,"column":21,"nodeType":"300","endLine":36,"endColumn":68},{"ruleId":"298","severity":1,"message":"299","line":21,"column":14,"nodeType":"300","endLine":21,"endColumn":54},{"ruleId":"284","severity":1,"message":"303","line":3,"column":3,"nodeType":"286","messageId":"287","endLine":3,"endColumn":15},{"ruleId":"284","severity":1,"message":"304","line":4,"column":3,"nodeType":"286","messageId":"287","endLine":4,"endColumn":15},{"ruleId":"284","severity":1,"message":"305","line":5,"column":3,"nodeType":"286","messageId":"287","endLine":5,"endColumn":18},{"ruleId":"284","severity":1,"message":"306","line":6,"column":3,"nodeType":"286","messageId":"287","endLine":6,"endColumn":22},{"ruleId":"284","severity":1,"message":"307","line":7,"column":3,"nodeType":"286","messageId":"287","endLine":7,"endColumn":18},{"ruleId":"284","severity":1,"message":"308","line":8,"column":3,"nodeType":"286","messageId":"287","endLine":8,"endColumn":21},{"ruleId":"284","severity":1,"message":"309","line":2,"column":27,"nodeType":"286","messageId":"287","endLine":2,"endColumn":36},{"ruleId":"284","severity":1,"message":"310","line":3,"column":17,"nodeType":"286","messageId":"287","endLine":3,"endColumn":22},{"ruleId":"284","severity":1,"message":"311","line":2,"column":31,"nodeType":"286","messageId":"287","endLine":2,"endColumn":41},{"ruleId":"284","severity":1,"message":"309","line":2,"column":27,"nodeType":"286","messageId":"287","endLine":2,"endColumn":36},"no-native-reassign",["312"],"no-negated-in-lhs",["313"],"@typescript-eslint/no-unused-vars","'list' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'page'. Either include it or remove the dependency array.","ArrayExpression",["314"],"React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["315"],["316"],["317"],["318"],["319"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'EditOutlined' is defined but never used.","'TagsOutlined' is defined but never used.","'MessageOutlined' is defined but never used.","'IssuesCloseOutlined' is defined but never used.","'ProjectOutlined' is defined but never used.","'PlayCircleOutlined' is defined but never used.","'useEffect' is defined but never used.","'Table' is defined but never used.","'Popconfirm' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"322","fix":"324"},{"desc":"325","fix":"326"},{"desc":"320","fix":"327"},{"desc":"325","fix":"328"},"Update the dependencies array to be: [load, page]",{"range":"329","text":"330"},"Update the dependencies array to be: [location, query]",{"range":"331","text":"332"},{"range":"333","text":"332"},"Update the dependencies array to be: [page, refresh]",{"range":"334","text":"335"},{"range":"336","text":"330"},{"range":"337","text":"335"},[1108,1114],"[load, page]",[3148,3158],"[location, query]",[696,706],[921,930],"[page, refresh]",[926,932],[931,940]]