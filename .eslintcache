[{"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/index.tsx":"1","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/reportWebVitals.js":"2","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/serviceWorker.ts":"3","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/App.tsx":"4","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/router/index.tsx":"5","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/index.tsx":"6","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/login/index.tsx":"7","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/home/index.tsx":"8","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/api.ts":"9","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/index.ts":"10","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/main.tsx":"11","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/side.tsx":"12","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/components/page-layout.tsx":"13","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/http.ts":"14","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/public.ts":"15","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/components/header-title/index.tsx":"16","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/menu.tsx":"17","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/components/bicon.tsx":"18","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/menu-config.ts":"19","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/config.ts":"20","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/commite-manage/index.tsx":"21","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/commite-manage/Edit.tsx":"22","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/user-manage/index.tsx":"23","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/user-manage/EditPassword.tsx":"24","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/user-manage/Edit.tsx":"25","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/worker-manage/index.tsx":"26","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/worker-manage/Edit.tsx":"27","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/goods/index.tsx":"28","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/goods/Edit.tsx":"29","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/lifeOrder/index.tsx":"30","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/mealOrder/index.tsx":"31"},{"size":556,"mtime":1619093157885,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1619093157899,"results":"34","hashOfConfig":"33"},{"size":5201,"mtime":1619093157899,"results":"35","hashOfConfig":"33"},{"size":354,"mtime":1619093157880,"results":"36","hashOfConfig":"33"},{"size":1592,"mtime":1619772020265,"results":"37","hashOfConfig":"33"},{"size":315,"mtime":1619093157883,"results":"38","hashOfConfig":"33"},{"size":1698,"mtime":1619251370477,"results":"39","hashOfConfig":"33"},{"size":1908,"mtime":1619268124994,"results":"40","hashOfConfig":"33"},{"size":4913,"mtime":1619781644435,"results":"41","hashOfConfig":"33"},{"size":73,"mtime":1619249272711,"results":"42","hashOfConfig":"33"},{"size":641,"mtime":1619093157883,"results":"43","hashOfConfig":"33"},{"size":459,"mtime":1619093157884,"results":"44","hashOfConfig":"33"},{"size":363,"mtime":1619093157881,"results":"45","hashOfConfig":"33"},{"size":963,"mtime":1619249123420,"results":"46","hashOfConfig":"33"},{"size":289,"mtime":1619267441574,"results":"47","hashOfConfig":"33"},{"size":692,"mtime":1619595805204,"results":"48","hashOfConfig":"33"},{"size":1771,"mtime":1619257093386,"results":"49","hashOfConfig":"33"},{"size":210,"mtime":1619093157880,"results":"50","hashOfConfig":"33"},{"size":1070,"mtime":1619771977146,"results":"51","hashOfConfig":"33"},{"size":60,"mtime":1619249067212,"results":"52","hashOfConfig":"33"},{"size":2981,"mtime":1619269248885,"results":"53","hashOfConfig":"33"},{"size":2065,"mtime":1619785151194,"results":"54","hashOfConfig":"33"},{"size":3191,"mtime":1619595805205,"results":"55","hashOfConfig":"33"},{"size":1796,"mtime":1619595805205,"results":"56","hashOfConfig":"33"},{"size":2881,"mtime":1619595805204,"results":"57","hashOfConfig":"33"},{"size":3272,"mtime":1619615024815,"results":"58","hashOfConfig":"33"},{"size":2801,"mtime":1619784397731,"results":"59","hashOfConfig":"33"},{"size":3090,"mtime":1619770327782,"results":"60","hashOfConfig":"33"},{"size":2181,"mtime":1619785183058,"results":"61","hashOfConfig":"33"},{"size":3129,"mtime":1619783809869,"results":"62","hashOfConfig":"33"},{"size":2933,"mtime":1619783562903,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"ppblw3",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/index.tsx",[],["130","131"],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/reportWebVitals.js",[],["132","133"],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/serviceWorker.ts",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/App.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/router/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/login/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/home/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/api.ts",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/index.ts",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/main.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/side.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/components/page-layout.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/http.ts",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/public.ts",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/components/header-title/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/menu.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/components/bicon.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/common/layout/menu-config.ts",["134","135","136","137","138","139"],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/utils/config.ts",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/commite-manage/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/commite-manage/Edit.tsx",["140","141"],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/user-manage/index.tsx",["142"],"import React, { useState, useEffect } from 'react'\nimport { Card, Table, Button, Popconfirm, message } from 'antd';\nimport './index.scss'\nimport PageLayout from '../../common/components/page-layout'\nimport { getCommiteUserList } from '../../utils/api'\nimport { getUserInfo } from '../../utils';\nimport Edit from './Edit'\nimport EditPassword from './EditPassword'\n\nconst Index: React.FC = () => {\n  const [userList, setUserList] = useState([])\n  const [editUser, setEditUser] = useState({})\n  const [loading, setLoading] = useState(false)\n  const [editModalVisible, setVisible] = useState(false)\n  const [modifyPwdModalVisible, setModifyPwdVisible] = useState(false)\n\n  const { type, commiteId } = getUserInfo()\n\n  useEffect(() => {\n    async function getCommiteList() {\n      setLoading(true)\n      const res: any = await getCommiteUserList({ type, commiteId })\n      setLoading(false)\n      const {\n        code,\n        message: msg,\n        data,\n      } = res.data\n      if (code !== 200) {\n        message.error(msg)\n      }\n\n      return setUserList(data)\n    }\n\n    getCommiteList()\n  }, [type, commiteId, editModalVisible])\n\n  const showEditModal = (func: string, data?: any) => {\n    if (func === 'add') {\n      setEditUser({})\n    } else if (func === 'edit') {\n      setEditUser(data)\n    }\n\n    setVisible(true)\n  }\n\n  const columns = [\n    {\n      title: '用户名',\n      dataIndex: 'userName',\n    },\n    {\n      title: '手机',\n      dataIndex: 'phone',\n    },\n    {\n      title: '身份证号码',\n      dataIndex: 'userNumber',\n    },\n    {\n      title: '账号状态',\n      dataIndex: 'auditStatus',\n      render: (status: number) => {\n        if (status === 1) {\n          return (\n            <span style={{ color: 'green' }}>已审核</span>\n          )\n        }\n\n        return (\n          <span style={{ color: 'red' }}>待审核</span>\n        )\n      },\n    },\n    {\n      title: '账号类型',\n      dataIndex: 'type',\n      render: (status: number) => {\n        if (status === 1) {\n          return (\n            <span style={{ color: 'green' }}>社区管理员</span>\n          )\n        }\n\n        return (\n          <span>普通用户</span>\n        )\n      },\n    },\n    {\n      title: '操作',\n      render: (record: any) => (\n        <>\n          <Button\n            type='primary'\n            onClick = {() => showEditModal('edit', record)}\n          >\n            编辑\n          </Button>&nbsp;&nbsp;\n          <Button\n            type='primary'\n            onClick={() => setModifyPwdVisible(true)}\n          >\n            修改密码\n          </Button>\n        </>\n      )\n    },\n  ];\n\n  return (\n    <PageLayout title='社区管理'>\n      <Card\n        loading={loading}\n      >\n        <Table\n          rowKey='id'\n          columns={columns}\n          dataSource={userList}\n        />\n      </Card>\n      {\n        editModalVisible && <Edit isShow={editModalVisible} data={editUser} handleCancel={() => setVisible(false)} />\n      }\n      {\n        modifyPwdModalVisible && <EditPassword isShow={modifyPwdModalVisible} data={editUser} handleCancel={() => setModifyPwdVisible(false)} />\n      }\n    </PageLayout>\n  )\n}\n\nexport default Index\n","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/user-manage/EditPassword.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/user-manage/Edit.tsx",["143"],"/* eslint-disable no-template-curly-in-string */\nimport React, { useState, useEffect } from 'react'\nimport { Modal, Radio, Form, Input, message } from 'antd'\nimport { editUser } from '../../utils/api'\n\ntype editProps = {\n  isShow: boolean\n  data: any\n  handleCancel: any\n}\n\nconst layout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 18 },\n}\n\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not a valid email!',\n    number: '${label} is not a valid number!',\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}',\n  },\n}\n\nconst Edit: React.FC<editProps> = ({ isShow, data, handleCancel }) => {\n  const [loading, setLoading] = useState(false)\n  const [form] = Form.useForm()\n  const { userName, phone, userNumber, auditStatus, type, password } = data\n\n  const handleSubmit = async () => {\n    try {\n      setLoading(true)\n      const values = await form.validateFields()\n      const res = await editUser({\n        editUser: {\n          userName: values.userName,\n          phone: values.phone,\n          userNumber: values.userNumber,\n          auditStatus: values.auditStatus,\n          type: values.type,\n          password: password,\n        },\n      })\n\n      setLoading(false)\n      const {\n        message: msg,\n        code,\n      } = res.data\n      if (code !== 200) {\n        return message.error(msg)\n      }\n\n      message.success('操作成功')\n      return handleCancel()\n    } catch (errorInfo) {\n      console.log('Failed:', errorInfo)\n    }\n  }\n\n  return (\n    <Modal\n      title='编辑用户'\n      confirmLoading={loading}\n      visible={isShow}\n      onCancel={handleCancel}\n      onOk={handleSubmit}\n    >\n      <Form\n        {...layout}\n        form={form}\n        validateMessages={validateMessages}\n        initialValues={{\n          userName,\n          phone,\n          userNumber,\n          auditStatus,\n          type,\n        }}\n      >\n        <Form.Item name=\"userName\" label=\"用户名\" rules={[{ required: true }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"phone\" label=\"手机号码\" rules={[{ required: true }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"userNumber\" label=\"身份证\" rules={[{ required: true }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"auditStatus\" label=\"审核状态\" rules={[{ required: true }]}>\n          <Radio.Group>\n            <Radio value={0}>待审核</Radio>\n            <Radio value={1}>审核通过</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item name=\"type\" label=\"用户类型\" rules={[{ required: true }]}>\n          <Radio.Group>\n            <Radio value={0}>普通用户</Radio>\n            <Radio value={1}>社区管理人员</Radio>\n          </Radio.Group>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default Edit\n","/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/worker-manage/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/worker-manage/Edit.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/goods/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/goods/Edit.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/lifeOrder/index.tsx",[],"/Users/yizhao/workspace/github/project/br/smile_typescript_admin/src/pages/mealOrder/index.tsx",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":3,"column":3,"nodeType":"150","messageId":"151","endLine":3,"endColumn":15},{"ruleId":"148","severity":1,"message":"152","line":4,"column":3,"nodeType":"150","messageId":"151","endLine":4,"endColumn":15},{"ruleId":"148","severity":1,"message":"153","line":5,"column":3,"nodeType":"150","messageId":"151","endLine":5,"endColumn":18},{"ruleId":"148","severity":1,"message":"154","line":6,"column":3,"nodeType":"150","messageId":"151","endLine":6,"endColumn":22},{"ruleId":"148","severity":1,"message":"155","line":7,"column":3,"nodeType":"150","messageId":"151","endLine":7,"endColumn":18},{"ruleId":"148","severity":1,"message":"156","line":8,"column":3,"nodeType":"150","messageId":"151","endLine":8,"endColumn":21},{"ruleId":"148","severity":1,"message":"157","line":2,"column":27,"nodeType":"150","messageId":"151","endLine":2,"endColumn":36},{"ruleId":"148","severity":1,"message":"158","line":3,"column":17,"nodeType":"150","messageId":"151","endLine":3,"endColumn":22},{"ruleId":"148","severity":1,"message":"159","line":2,"column":31,"nodeType":"150","messageId":"151","endLine":2,"endColumn":41},{"ruleId":"148","severity":1,"message":"157","line":2,"column":27,"nodeType":"150","messageId":"151","endLine":2,"endColumn":36},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"@typescript-eslint/no-unused-vars","'EditOutlined' is defined but never used.","Identifier","unusedVar","'TagsOutlined' is defined but never used.","'MessageOutlined' is defined but never used.","'IssuesCloseOutlined' is defined but never used.","'ProjectOutlined' is defined but never used.","'PlayCircleOutlined' is defined but never used.","'useEffect' is defined but never used.","'Table' is defined but never used.","'Popconfirm' is defined but never used.","no-global-assign","no-unsafe-negation"]